openapi: 3.0.0
info:
  title: hottocoffee
  version: '0.0.1'
servers:
  - url: 'http://localhost:3000'
paths:
  '/user':
    post:
      tags: [user]
      summary: register new user
      description: Register new user.
      responses:
        '201':
          description: Success to register new user
          content:
            application/json:
              schema:
                $ref: './schemas/user.yaml#/components/schemas/User'
        '400':
          description: Bad request. This response will be reuturned if posted form has some validation errors.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Internal_Server_Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: './schemas/user.yaml#/components/schemas/User'

  '/user/sign-in':
    post:
      tags: [user]
      summary: Sign in as an existing user
      description: Sign in as an existing user.
      responses:
        '200':
          description: Succeed to log in
          content:
            application/json:
              schema:
                type: object
                description: Access token. Currently, it is JWT.
                properties:
                  token:
                    type: string
        '401':
          description: Bad request. This response will be reuturned if posted form has some validation errors.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Internal_Server_Error'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: User login schema
              properties:
                email:
                  type: string
                  example: sample@example.com
                password:
                  type: string
                  example: root

  '/user/{account_id}':
    description: 'user information'
    get:
      parameters:
        - in: path
          name: account_id
          schema: 
            type: string
          required: true
      summary: get user information by account_id
      tags: [user]
      description: Get user information by account_id
      responses:
        '200':
          description: Success to get user information
          content:
            application/json:
              schema:
                $ref: './schemas/user.yaml#/components/schemas/User'
        '400':
          description: Bad request. This response will be returned if malformed `account_id` is given.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      tags: [user]
      summary: update user information
      description: Update user information
      responses:
        '200':
          description: Success to update user information
          content:
            application/json:
              schema:
                $ref: './schemas/user.yaml#/components/schemas/User'
        '400':
          description: Bad request. This response will be returned if form has some validation error.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
        '404':
          description: Not found
        '500':
          description: Internal server error

  '/post':
    description: post information
    post:
      summary: post information
      tags: [post]
      description: Post coffee information user drank
      requestBody:
        content:
          application/json:
            schema:
              $ref: './schemas/post.yaml#/components/schemas/Post'
      responses:
        '200':
          description: Success to post information
          content:
            application/json:
              schema:
                $ref: './schemas/post.yaml#/components/schemas/Post'

  '/post/{post_id}':
    description: specific post information
    parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
    get:
      summary: get post information
      tags: [post]
      description: Get post information
      responses:
        '200':
          description: Success to get post information
          content:
            application/json:
              schema:
                $ref: './schemas/post.yaml#/components/schemas/Post'
        '400':
          description: Bad request. This response will be returned if malformed `post_id` is given.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
        '404':
          description: Not found
        '500':
          description: Internal server error

    delete:
      summary: delete post information
      tags: [post]
      description: Delete post information
      responses:
        '200':
          description: success to delete post information
          content:
            application/json:
              schema:
                $ref: './schemas/success.yaml#/components/schemas/Success'
        '400':
          description: Bad request. This response will be returned if malformed `post_id` is given.
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
        '404':
          description: Not found
        '500':
          description: Internal server error

  '/timeline':
    get:
      summary: get timeline
      tags: [timeline]
      description: Get the latest 50 posts.
      parameters:
        - in: query
          schema:
            type: string
          name: lower_post_id
          description: Return up to 50 posts newer than the given id.
          required: false
          example: 1
        - in: query
          schema:
            type: string
          name: upper_post_id
          description: Return up to 50 posts older than the given id.
          required: false
          example: 10
      responses:
        '200':
          description: Success to get timeline
          content:
            application/json:
              schema:
                $ref: './schemas/timeline.yaml#/components/schemas/Timeline'
        '400':
          description: This response will be returned if both `lower_post_id` and `upper_post_id` are specified
          content:
            application/json:
              schema:
                $ref: './schemas/error.yaml#/components/schemas/Bad_Request'
